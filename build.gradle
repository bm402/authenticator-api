plugins {
	id "org.springframework.boot" version "2.2.5.RELEASE"
	id "io.spring.dependency-management" version "1.0.9.RELEASE"
	id "java"
	id "jacoco"
	id "io.freefair.lombok" version "5.0.0-rc6"
	id "org.flywaydb.flyway" version "6.3.2"
	id "org.sonarqube" version "2.8"
}

group = "com.bncrypted"
version = "1.0.0"
sourceCompatibility = "11"

repositories {
	mavenCentral()
}

bootJar {
	archiveFileName = "authenticator-api.jar"
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-jdbc"
	implementation "org.springframework.security:spring-security-core:5.3.0.RELEASE"
	implementation "org.postgresql:postgresql:42.2.11"
	implementation "org.jdbi:jdbi3-core:3.12.2"
	implementation "org.jdbi:jdbi3-sqlobject:3.12.2"
	implementation "org.flywaydb:flyway-core:6.3.2"
	implementation "com.google.guava:guava:28.2-jre"
	implementation "com.warrenstrange:googleauth:1.4.0"
	implementation "io.jsonwebtoken:jjwt:0.9.1"
	implementation "javax.xml.bind:jaxb-api"
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation "io.springfox:springfox-swagger-ui:2.9.2"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.assertj:assertj-core:3.15.0"
	testImplementation "org.testcontainers:postgresql:1.13.0"
	testImplementation "org.mockito:mockito-core:3.3.3"
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

flyway {
	def host = System.getenv("AUTHENTICATOR_DB_HOST") ?: "192.168.99.100"
	def port = System.getenv("AUTHENTICATOR_DB_PORT") ?: "8432"
	def name = System.getenv("AUTHENTICATOR_DB_NAME") ?: "authenticator"
	def username = System.getenv("AUTHENTICATOR_DB_USERNAME") ?: "authuser"
	def pass = System.getenv("AUTHENTICATOR_DB_PASSWORD") ?: "authpass"

	url = "jdbc:postgresql://" + host + ":" + port + "/" + name
	user = username
	password = pass
}

sonarqube {
	properties {
		property "sonar.projectKey", "bncrypted_authenticator-api"
		property "sonar.organization", "bncrypted"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.exclusions", "**/controller/**, **/model/**, **/repository/**, **/*Application*"
	}
}

jacocoTestReport {
	executionData(test)
	reports {
		xml.enabled true
	}
}
